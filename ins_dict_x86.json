{"UNK": 0, " ": 1, "call <FUN>": 2, "mov eax <MEM>": 3, "add esp <NUM>": 4, "sub esp <NUM>": 5, "push <NUM>": 6, "push <STR>": 7, "push <MEM>": 8, "mov <MEM> eax": 9, "jz <ADR>": 10, "push eax": 11, "jmp <ADR>": 12, "mov <MEM> <NUM>": 13, "test eax eax": 14, "push ebx": 15, "mov edx <MEM>": 16, "jnz <ADR>": 17, "mov <MEM> <STR>": 18, "push esi": 19, "retn": 20, "mov eax <STR>": 21, "lea eax <ADR>": 22, "push edi": 23, "mov <MEM> edx": 24, "push ebp": 25, "pop ebp": 26, "mov eax <NUM>": 27, "pop ebx": 28, "align <NUM>": 29, "pop esi": 30, "mov ebx <MEM>": 31, "cmp <MEM> <NUM>": 32, "test <STR> <STR>": 33, "mov ecx <MEM>": 34, "pop edi": 35, "mov esi <MEM>": 36, "xor eax eax": 37, "lea esp <ADR>": 38, "push edx": 39, "lea edx <ADR>": 40, "mov edi <MEM>": 41, "movzx eax <MEM>": 42, "cmp eax <NUM>": 43, "add eax <NUM>": 44, "mov <STR> <NUM>": 45, "mov <STR> <MEM>": 46, "mov edx eax": 47, "mov <MEM> ecx": 48, "mov edx <STR>": 49, "jle <ADR>": 50, "add <STR> <NUM>": 51, "lea esi <ADR>": 52, "mov <MEM> ebx": 53, "movzx edx <MEM>": 54, "movzx eax <STR>": 55, "mov ebp <MEM>": 56, "mov <STR> eax": 57, "mov ebx eax": 58, "jg <ADR>": 59, "cmp <STR> <NUM>": 60, "lea ecx <ADR>": 61, "mov ecx <STR>": 62, "mov ebp esp": 63, "add <MEM> <NUM>": 64, "ja <ADR>": 65, "mov esi eax": 66, "sub <MEM> <NUM>": 67, "shl eax <NUM>": 68, "mov <MEM> esi": 69, "push ecx": 70, "mov edx <NUM>": 71, "and eax <NUM>": 72, "mov <MEM> edi": 73, "call eax": 74, "leave": 75, "pop <STR>": 76, "xor edx edx": 77, "mov ebx <STR>": 78, "add eax edx": 79, "cmp edx <NUM>": 80, "mov ecx <NUM>": 81, "mov ebx <NUM>": 82, "xor <STR> <STR>": 83, "shr eax <NUM>": 84, "lea ebx <ADR>": 85, "lea <STR> <ADR>": 86, "xor ebx ebx": 87, "lea edi <ADR>": 88, "cmp eax <MEM>": 89, "test edx edx": 90, "mov esi <STR>": 91, "nop": 92, "pop edx": 93, "call <MEM>": 94, "mov edi eax": 95, "mov esi <NUM>": 96, "shr edx <NUM>": 97, "add <MEM> eax": 98, "movzx ecx <MEM>": 99, "mov edi <STR>": 100, "shr ecx <NUM>": 101, "mov eax ebx": 102, "mov eax edx": 103, "xor esi esi": 104, "mov <STR> <STR>": 105, "sub eax <NUM>": 106, "xor edi edi": 107, "mov eax ecx": 108, "jbe <ADR>": 109, "shl edx <NUM>": 110, "add edx <NUM>": 111, "shr <STR> <NUM>": 112, "mov edi <NUM>": 113, "or <STR> eax": 114, "xor <STR> <MEM>": 115, "mov ecx eax": 116, "pop eax": 117, "jmp <MEM>": 118, "test <MEM> <NUM>": 119, "test ebx ebx": 120, "pop ecx": 121, "sub eax <MEM>": 122, "mov eax esi": 123, "jl <ADR>": 124, "cmp <STR> <STR>": 125, "lea ebp <ADR>": 126, "test esi esi": 127, "test ecx ecx": 128, "mov ebp <NUM>": 129, "mov ebp eax": 130, "test <STR> <NUM>": 131, "js <ADR>": 132, "cmp ebx <NUM>": 133, "xor <MEM> <STR>": 134, "cmp <STR> eax": 135, "movzx ebx <MEM>": 136, "xor ebp ebp": 137, "setnz <STR>": 138, "add eax <MEM>": 139, "add ebx <NUM>": 140, "mov eax edi": 141, "add edx eax": 142, "shr edi <NUM>": 143, "shr esi <NUM>": 144, "sub <STR> <NUM>": 145, "xor ecx ecx": 146, "jnb <ADR>": 147, "sub edx eax": 148, "mov ebp <STR>": 149, "movzx <STR> <STR>": 150, "jmp eax": 151, "or edx <STR>": 152, "setz <STR>": 153, "jge <ADR>": 154, "add eax ecx": 155, "test edi edi": 156, "shr ebx <NUM>": 157, "movzx edx <STR>": 158, "movzx esi <MEM>": 159, "sar eax <NUM>": 160, "sub eax edx": 161, "add <STR> <STR>": 162, "mov ecx ebx": 163, "add <STR> <MEM>": 164, "and edx <NUM>": 165, "mov ebx ecx": 166, "jns <ADR>": 167, "shl esi <NUM>": 168, "mov <MEM> ebp": 169, "add esi <NUM>": 170, "mov ecx edx": 171, "repe <STR>": 172, "mov edx esi": 173, "mov ebx edx": 174, "sub ecx eax": 175, "cmp <MEM> eax": 176, "mov ebx esi": 177, "xor eax <STR>": 178, "mov esi ecx": 179, "neg eax": 180, "mov edx edi": 181, "mov edi edx": 182, "cmp <MEM> <STR>": 183, "mov esi edx": 184, "mov edi ecx": 185, "shl ecx <NUM>": 186, "sub ecx <NUM>": 187, "jb <ADR>": 188, "shl ebx <NUM>": 189, "movzx ebx <STR>": 190, "cmp edx eax": 191, "mov ecx edi": 192, "or <MEM> <NUM>": 193, "movzx edi <MEM>": 194, "cmp esi <NUM>": 195, "mov edx ecx": 196, "movzx <STR> <MEM>": 197, "add eax <STR>": 198, "or <STR> esi": 199, "test ebp ebp": 200, "sub <MEM> eax": 201, "cmovbe eax edx": 202, "sub <STR> eax": 203, "add edx ecx": 204, "sub edx <STR>": 205, "mov ecx esi": 206, "and ecx <NUM>": 207, "fstp <MEM>": 208, "mov edx ebx": 209, "cmp ecx <NUM>": 210, "mov <STR> edx": 211, "add ecx <NUM>": 212, "setb <STR>": 213, "sub edx <NUM>": 214, "repne <STR>": 215, "sub <STR> edx": 216, "call edx": 217, "or eax <NUM>": 218, "sub <STR> ecx": 219, "setnbe <STR>": 220, "shl edi <NUM>": 221, "sub ebp <NUM>": 222, "add edi <NUM>": 223, "rep <STR>": 224, "xor eax <MEM>": 225, "mov <STR> ebx": 226, "adc edx <MEM>": 227, "or ebx <STR>": 228, "and ebx <NUM>": 229, "or ecx <STR>": 230, "not eax": 231, "shl edx <STR>": 232, "or eax <STR>": 233, "movzx ecx <STR>": 234, "add eax eax": 235, "not ecx": 236, "movzx esi <STR>": 237, "shr ebp <NUM>": 238, "xor esi <STR>": 239, "mov edx ebp": 240, "mov esi ebx": 241, "shl <STR> <NUM>": 242, "sub <STR> <STR>": 243, "cdq": 244, "add ecx eax": 245, "or <STR> ecx": 246, "xor edx <STR>": 247, "cmp ebp <NUM>": 248, "mov edi ebx": 249, "cmp <STR> <MEM>": 250, "shl eax <STR>": 251, "add <MEM> edx": 252, "xor edx <MEM>": 253, "add eax esi": 254, "or eax edx": 255, "or <STR> <NUM>": 256, "add <MEM> <STR>": 257, "sub ecx edx": 258, "and <STR> <NUM>": 259, "or <STR> edx": 260, "and edi <NUM>": 261, "mov edi esi": 262, "movzx edi <STR>": 263, "mov <STR> ecx": 264, "imul eax <STR>": 265, "movzx ebp <STR>": 266, "sub ecx <STR>": 267, "cmp edi <NUM>": 268, "sub esi <STR>": 269, "add ebp edx": 270, "sub ecx esi": 271, "sub ebx <STR>": 272, "call ecx": 273, "xor edi <STR>": 274, "add <STR> eax": 275, "add ecx ebx": 276, "add ebp <NUM>": 277, "or edx eax": 278, "add edi eax": 279, "add eax ebx": 280, "adc edx ebx": 281, "xor ecx <STR>": 282, "cmp eax <STR>": 283, "add edx ebx": 284, "sub ebp <STR>": 285, "xor ecx <MEM>": 286, "cmp <MEM> ecx": 287, "add eax ebp": 288, "mov ebp edi": 289, "adc edx <NUM>": 290, "sar edx <NUM>": 291, "sub ebp esi": 292, "add edx <STR>": 293, "mov eax ebp": 294, "xor <STR> eax": 295, "cmovbe esi ebx": 296, "cmova <STR> <STR>": 297, "cmp <STR> edx": 298, "add esi <STR>": 299, "add ebx <STR>": 300, "mov esi ebp": 301, "sub ecx edi": 302, "sub esi <NUM>": 303, "movsx eax <STR>": 304, "add edx <MEM>": 305, "sub ebx edx": 306, "mov esi edi": 307, "mov ebx edi": 308, "and <MEM> <NUM>": 309, "xor <MEM> <NUM>": 310, "mov <STR> edi": 311, "sub edi <NUM>": 312, "add esi <MEM>": 313, "sub eax <STR>": 314, "add eax edi": 315, "or edi <STR>": 316, "mov <STR> esi": 317, "and esi <NUM>": 318, "xor ebx <STR>": 319, "imul <STR> eax": 320, "movzx ebp <MEM>": 321, "mov esi esi": 322, "sar ecx <NUM>": 323, "cmovs eax edx": 324, "xchg <STR> <STR>": 325, "add ecx <MEM>": 326, "sub eax ecx": 327, "adc <MEM> edx": 328, "imul eax <MEM>": 329, "add esi eax": 330, "cmp <MEM> edx": 331, "add ebx <MEM>": 332, "imul edx esi": 333, "sub ecx <MEM>": 334, "add esi edx": 335, "mov ebp ebx": 336, "mov ebp ecx": 337, "sub <STR> esi": 338, "cmovz eax edx": 339, "sub ebx esi": 340, "sub eax esi": 341, "imul eax <NUM>": 342, "fild <MEM>": 343, "shr eax <STR>": 344, "or edx <NUM>": 345, "mul <MEM>": 346, "sub edi <STR>": 347, "add ebx eax": 348, "shld edx <STR>": 349, "cmp eax edx": 350, "fst <MEM>": 351, "sbb edx <MEM>": 352, "sub edx ecx": 353, "add ebp <STR>": 354, "sub esi edx": 355, "cmp edx <MEM>": 356, "imul ecx esi": 357, "or eax ecx": 358, "sub ebx eax": 359, "imul ecx edi": 360, "bswap eax": 361, "cmp <STR> ecx": 362, "or <MEM> <STR>": 363, "setnle <STR>": 364, "sub ebx <NUM>": 365, "cmp eax esi": 366, "call edi": 367, "bswap ebx": 368, "jmp edx": 369, "xor eax <NUM>": 370, "mov ecx ebp": 371, "sub ebx ecx": 372, "sub <STR> ebx": 373, "and eax <MEM>": 374, "fld <MEM>": 375, "cmp eax ebx": 376, "sub esi edi": 377, "sub eax ebx": 378, "sub edx ebx": 379, "or <MEM> eax": 380, "add ecx edx": 381, "fstp <STR>": 382, "call ebx": 383, "xor <MEM> eax": 384, "sub edi ecx": 385, "shl ebp <NUM>": 386, "sbb eax eax": 387, "sar ebx <NUM>": 388, "cmp ebx eax": 389, "sub edx esi": 390, "sub edi edx": 391, "cmp <MEM> ebx": 392, "sub eax edi": 393, "sub esi ecx": 394, "cmp <STR> esi": 395, "sub ebx edi": 396, "sub esi eax": 397, "rol <STR> <NUM>": 398, "sub ebp ecx": 399, "or eax ebx": 400, "cmp ecx <MEM>": 401, "setnb <STR>": 402, "mul ecx": 403, "add <STR> ebp": 404, "add ecx esi": 405, "sub ebp edx": 406, "shrd eax <STR>": 407, "sub edi esi": 408, "shl <MEM> <NUM>": 409, "and eax edx": 410, "cmp esi <STR>": 411, "add <MEM> ecx": 412, "and ebp <NUM>": 413, "sbb ebx edx": 414, "cmp ecx <STR>": 415, "sub edi ebx": 416, "cmp esi <MEM>": 417, "xor edx ebx": 418, "cmp edx <STR>": 419, "sub edx <MEM>": 420, "movsx eax <MEM>": 421, "or <STR> edi": 422, "call ebp": 423, "or ebp <STR>": 424, "sub ecx ebx": 425, "mov <STR> ebp": 426, "or <STR> <STR>": 427, "or eax <MEM>": 428, "cmp ebx <STR>": 429, "or <STR> <MEM>": 430, "cmp eax edi": 431, "adc <MEM> <NUM>": 432, "imul ebx esi": 433, "sub edi eax": 434, "sub esi ebx": 435, "cmovnz eax edx": 436, "shrd ecx <STR>": 437, "sar edx <STR>": 438, "add edi <MEM>": 439, "cmp ecx eax": 440, "sub ecx ebp": 441, "or <STR> ebx": 442, "sub edx edi": 443, "add edi <STR>": 444, "imul ecx ebx": 445, "cmp eax ecx": 446, "or edx ecx": 447, "sub esi ebp": 448, "shr <MEM> <STR>": 449, "imul edx ebx": 450, "add <MEM> ebx": 451, "shl ebx <STR>": 452, "cmp <MEM> edi": 453, "imul esi edi": 454, "or edx edi": 455, "sar edi <NUM>": 456, "add ecx <STR>": 457, "inc <STR>": 458, "cmp esi eax": 459, "xor ebx <NUM>": 460, "sub esi <MEM>": 461, "sub edx ebp": 462, "sub <STR> edi": 463, "add edi edx": 464, "sar <STR> <NUM>": 465, "fld <STR>": 466, "cmp <STR> ebx": 467, "sar eax <STR>": 468, "movsx edx <MEM>": 469, "cmp <MEM> esi": 470, "cmp ecx edx": 471, "xor eax edx": 472, "imul ebx edi": 473, "imul ebp esi": 474, "imul esi ebp": 475, "imul edx ebp": 476, "shl esi <STR>": 477, "imul edi ebp": 478, "xor ebp <STR>": 479, "add edx esi": 480, "imul edx edi": 481, "mov edi ebp": 482, "neg edx": 483, "adc edi <MEM>": 484, "call esi": 485, "cmp edi <STR>": 486, "cmp <STR> ebp": 487, "cmp edi eax": 488, "sar esi <NUM>": 489, "xor <MEM> ecx": 490, "cmp ebp <STR>": 491, "mov ebp esi": 492, "and ecx eax": 493, "xor <MEM> edx": 494, "shr <MEM> <NUM>": 495, "xor edx ecx": 496, "not edx": 497, "imul eax ecx": 498, "setbe <STR>": 499, "retn <NUM>": 500, "xor ecx eax": 501, "cmp esi edx": 502, "add ecx ebp": 503, "cmovnz eax <STR>": 504, "fdivrp <STR> <STR>": 505, "add esi edi": 506, "sbb <MEM> edx": 507, "jmp ecx": 508, "add edx ebp": 509, "not esi": 510, "cmp esi ebx": 511, "movsx ebx <STR>": 512, "cmp edx ebx": 513, "add <STR> esi": 514, "cmp ebp eax": 515, "imul esi ecx": 516, "imul edi eax": 517, "or ecx edi": 518, "test esi <NUM>": 519, "xor ecx esi": 520, "and ecx <STR>": 521, "mov <STR>": 522, "ror <STR> <NUM>": 523, "add ebx esi": 524, "or eax edi": 525, "adc edx edi": 526, "or ecx eax": 527, "cmovz eax ecx": 528, "mov ebp edx": 529, "imul edx": 530, "shr edx <STR>": 531, "add <MEM> esi": 532, "add ebx edx": 533, "cmp ebp <MEM>": 534, "sub ebx <MEM>": 535, "cmp ecx esi": 536, "and edx <MEM>": 537, "add edx edx": 538, "cmp eax ebp": 539, "neg ebx": 540, "add edx edi": 541, "xor <STR> <NUM>": 542, "or eax esi": 543, "div <MEM>": 544, "imul <STR> esi": 545, "imul eax edx": 546, "xor eax ecx": 547, "rol edx <NUM>": 548, "add ebp eax": 549, "or edi <NUM>": 550, "mov ebx ebp": 551, "adc edi <NUM>": 552, "mul esi": 553, "idiv <MEM>": 554, "cmp <MEM> ebp": 555, "and eax ecx": 556, "cmp ebx <MEM>": 557, "xor edx esi": 558, "movsx esi <STR>": 559, "cmp edi ecx": 560, "cmovs <STR> edx": 561, "and <STR> <MEM>": 562, "or ecx <NUM>": 563, "imul ecx eax": 564, "cmp edi <MEM>": 565, "bt ebp <STR>": 566, "mul edx": 567, "and esi eax": 568, "or esi <STR>": 569, "adc ebx edx": 570, "fldz": 571, "xor eax ebx": 572, "not edi": 573, "cmp <STR> edi": 574, "sar ebx <STR>": 575, "mul eax": 576, "cmp ebx esi": 577, "add <MEM> ebp": 578, "sub <STR> <MEM>": 579, "cmovnz eax <MEM>": 580, "sub ebp edi": 581, "cmp edx ebp": 582, "xor ebp <MEM>": 583, "adc ebx <MEM>": 584, "adc edi edx": 585, "movsx edx <STR>": 586, "sub <MEM> ebx": 587, "and <MEM> eax": 588, "or edi ebp": 589, "add <STR> ecx": 590, "add esi ebx": 591, "sub edi <MEM>": 592, "fdivp <STR> <STR>": 593, "add <MEM> edi": 594, "sub ebx ebp": 595, "sub edi ebp": 596, "add <STR> edx": 597, "and ebx eax": 598, "add esi ecx": 599, "cmp ebx edx": 600, "sub ebp ebx": 601, "shld <STR> <STR>": 602, "movsx <STR> <MEM>": 603, "div ecx": 604, "bt esi <STR>": 605, "or ecx <MEM>": 606, "cmovnz edx ecx": 607, "xor edx eax": 608, "cmp esi edi": 609, "setle <STR>": 610, "add <STR> ebx": 611, "add edi ebp": 612, "idiv <STR>": 613, "xor eax edi": 614, "cmovnz eax ecx": 615, "movsx esi <MEM>": 616, "xor <STR> edx": 617, "add ebx ecx": 618, "sub <MEM> <STR>": 619, "shr edi <STR>": 620, "and edx eax": 621, "cmovle eax <MEM>": 622, "cmp edi edx": 623, "sar ebp <NUM>": 624, "sbb edx ebx": 625, "cmp ebp edx": 626, "cmp edx esi": 627, "neg ecx": 628, "mul ebx": 629, "fucomip <STR> <STR>": 630, "bswap ecx": 631, "or ecx esi": 632, "or ebx eax": 633, "test <MEM> eax": 634, "or edx <MEM>": 635, "adc ebx <NUM>": 636, "test ebp <NUM>": 637, "neg esi": 638, "sbb edx edi": 639, "or edi eax": 640, "neg <STR>": 641, "and eax edi": 642, "xor esi <NUM>": 643, "not ebx": 644, "cmp esi ecx": 645, "and edx <STR>": 646, "xor ecx ebx": 647, "test edi <NUM>": 648, "sub ebp eax": 649, "xor edx <NUM>": 650, "shl ebp <STR>": 651, "fldcw <MEM>": 652, "imul ebx <MEM>": 653, "and <MEM> <STR>": 654, "xor ecx <NUM>": 655, "add ecx ecx": 656, "add edi ebx": 657, "or <MEM> edx": 658, "cmovz ebx eax": 659, "cmp edi ebp": 660, "and ecx esi": 661, "setbe <MEM>": 662, "shrd esi <STR>": 663, "cmp ebp ebx": 664, "xor edx edi": 665, "add edi esi": 666, "cmp ebx edi": 667, "cmovz edx ecx": 668, "test eax <NUM>": 669, "sar edi <STR>": 670, "imul <STR> ebx": 671, "movsx ecx <STR>": 672, "movsx ecx <MEM>": 673, "or ebx ecx": 674, "add ebx edi": 675, "and edx ecx": 676, "cmovg eax edx": 677, "cmp ebx ecx": 678, "add ecx edi": 679, "fdivr <MEM>": 680, "sbb esi esi": 681, "cmp edx ecx": 682, "adc ecx <MEM>": 683, "shr <STR> <STR>": 684, "fxch <STR>": 685, "test ecx <NUM>": 686, "rol eax <NUM>": 687, "imul edx <STR>": 688, "adc edi ebx": 689, "imul edx <NUM>": 690, "xor esi <MEM>": 691, "test edx <NUM>": 692, "sub <MEM> esi": 693, "movsx edi <STR>": 694, "bswap edx": 695, "add ebp <MEM>": 696, "cmovnz ecx ebx": 697, "sbb edi edx": 698, "test eax edx": 699, "imul ebx <NUM>": 700, "cmp ecx ebp": 701, "div esi": 702, "imul <STR>": 703, "imul eax esi": 704, "cmp ebp edi": 705, "setz <MEM>": 706, "cmovb ebx eax": 707, "cmovle ecx esi": 708, "and eax ebx": 709, "cmp ecx ecx": 710, "cmovz <STR> ebx": 711, "xor eax esi": 712, "shl edi <STR>": 713, "imul eax ebx": 714, "sub <MEM> ecx": 715, "cmovnz eax ebp": 716, "sbb edx <NUM>": 717, "xor <MEM> ebp": 718, "imul esi <NUM>": 719, "movzx <STR>": 720, "cmovns ebx eax": 721, "xor <MEM> edi": 722, "or ecx ebx": 723, "cmovz ecx <MEM>": 724, "cmp edi ebx": 725, "and edx edi": 726, "fdiv <STR>": 727, "cmovz eax <MEM>": 728, "cmp edi esi": 729, "sbb edi <MEM>": 730, "idiv edi": 731, "imul ecx <STR>": 732, "or edi edx": 733, "cmovnz ebx eax": 734, "or ecx edx": 735, "xor <STR> edi": 736, "or esi eax": 737, "sbb <MEM> ebx": 738, "setl <STR>": 739, "cmovz <STR> edx": 740, "adc esi <NUM>": 741, "or esi <NUM>": 742, "bswap esi": 743, "or eax ebp": 744, "bt edx <STR>": 745, "adc <MEM> ebx": 746, "cmovle ebx <STR>": 747, "fnstcw <MEM>": 748, "fmul <STR>": 749, "fistp <MEM>": 750, "adc edx esi": 751, "adc ebp <NUM>": 752, "adc eax <NUM>": 753, "dec <STR>": 754, "imul ebx edx": 755, "imul edx <MEM>": 756, "imul edx ecx": 757, "cmovns esi eax": 758, "cmovns edx eax": 759, "imul ebx ecx": 760, "or ebx esi": 761, "and edi <STR>": 762, "cmovns edx ecx": 763, "movsx edi <MEM>": 764, "or ebx <NUM>": 765, "imul eax edi": 766, "mul edi": 767, "idiv esi": 768, "shl <MEM> <STR>": 769, "div ebp": 770, "and eax <STR>": 771, "and edi esi": 772, "sbb edx edx": 773, "cmp ecx ebx": 774, "or <MEM> ecx": 775, "imul <STR> <STR>": 776, "and ecx edi": 777, "cmovz <STR> esi": 778, "xor esi ecx": 779, "adc <MEM> ecx": 780, "shld ebx <STR>": 781, "or esi ecx": 782, "imul ecx <MEM>": 783, "adc edx edx": 784, "imul esi edx": 785, "db <NUM> <NUM>": 786, "cmp esi ebp": 787, "and ebx <STR>": 788, "cmovz edi ebp": 789, "and edx esi": 790, "and ecx <MEM>": 791, "cmovle eax <STR>": 792, "cmovnb edx <MEM>": 793, "xor edi <NUM>": 794, "cmovle esi <STR>": 795, "or edx ebp": 796, "neg <MEM>": 797, "sub <MEM> edx": 798, "imul ebx eax": 799, "imul esi eax": 800, "shld edi <STR>": 801, "cmp ebp esi": 802, "cmp edx edi": 803, "dec ecx": 804, "sbb ebp ebp": 805, "shrd edx <STR>": 806, "imul ebx <STR>": 807, "shl <STR> <STR>": 808, "cmova eax ebx": 809, "cmovnz <STR> <STR>": 810, "cmovg ebx <STR>": 811, "cmovg ebx esi": 812, "setnl <STR>": 813, "cmova eax edx": 814, "cmovz edx eax": 815, "cmp ecx edi": 816, "and <STR> eax": 817, "sub ebp <MEM>": 818, "div <STR>": 819, "sbb ecx edi": 820, "cmovg edx ecx": 821, "cmovg eax edi": 822, "cmovs ebx edx": 823, "cmovg ecx ebx": 824, "cmovz ebp eax": 825, "fucomi <STR> <STR>": 826, "cmovle eax edx": 827, "cmovz <STR> eax": 828, "cmova eax <MEM>": 829, "cmovle ecx eax": 830, "cmovz edx <MEM>": 831, "cmovns eax <MEM>": 832, "sbb edi edi": 833, "xor ecx edx": 834, "movsx ebp <STR>": 835, "cmp ebx ebp": 836, "xor esi eax": 837, "xor ebx edx": 838, "test ebp edx": 839, "imul esi <MEM>": 840, "xor edi <MEM>": 841, "or ebx edx": 842, "not <STR>": 843, "cmovnz <STR> edx": 844, "or esi edx": 845, "add ebx ebx": 846, "and ebx edx": 847, "cmovns edi ecx": 848, "xor ecx edi": 849, "cmovl <STR> edx": 850, "xor eax ebp": 851, "sub <MEM> ebp": 852, "div edi": 853, "cmovle <STR> <STR>": 854, "imul edi <NUM>": 855, "cmovns eax edx": 856, "cmovle ecx <STR>": 857, "setnb <MEM>": 858, "rol <STR> <STR>": 859, "cmovbe eax <MEM>": 860, "sbb ebx <MEM>": 861, "cmovns ebx esi": 862, "cmovz esi eax": 863, "cmovnz <STR> eax": 864, "neg ebp": 865, "bswap edi": 866, "or ebp <NUM>": 867, "mov edi esp": 868, "inc esi": 869, "imul edi <MEM>": 870, "idiv ecx": 871, "cmovle <STR> esi": 872, "and edi <MEM>": 873, "add ebp ebx": 874, "cmovnz eax edi": 875, "neg edi": 876, "cmova <STR> esi": 877, "xor ebx edi": 878, "sbb esi <MEM>": 879, "cmovz ebp ecx": 880, "bt edi <STR>": 881, "cmovz ebx edx": 882, "cmovz ecx edx": 883, "cmovnz edx edi": 884, "cmovbe ebx <STR>": 885, "mov <MEM> esp": 886, "cmovz edx ebp": 887, "cmova eax ecx": 888, "adc ecx <STR>": 889, "cmovz <STR> ecx": 890, "shr ebx <STR>": 891, "cmovz eax ebx": 892, "imul ebx ebp": 893, "dec <MEM>": 894, "cmovz esi edi": 895, "movsx ebx <MEM>": 896, "cmovle ecx edx": 897, "cmovle ebp <STR>": 898, "adc ecx <NUM>": 899, "cmovle ecx ebx": 900, "and <STR> esi": 901, "sub <MEM> edi": 902, "or edi ebx": 903, "cmovnb ecx <MEM>": 904, "adc ebx edi": 905, "cmovnz ecx edx": 906, "or esi ebx": 907, "cmovnz ebx edi": 908, "or ebx <MEM>": 909, "adc eax ebx": 910, "add edi edi": 911, "sub esp ebx": 912, "sub <STR> ebp": 913, "cmovns esi edi": 914, "sbb eax <NUM>": 915, "cmovz eax esi": 916, "and ecx edx": 917, "cmovbe edx ebp": 918, "cmp ebp ecx": 919, "cmova <STR> ecx": 920, "add <STR> edi": 921, "add ebx ebp": 922, "or edi ecx": 923, "adc edi eax": 924, "inc <MEM>": 925, "test <MEM> <STR>": 926, "sar <MEM> <NUM>": 927, "cmovns eax ecx": 928, "sub eax ebp": 929, "cmovz eax <STR>": 930, "mul <STR>": 931, "or ebp eax": 932, "imul edi ecx": 933, "xor edi ecx": 934, "xor <STR> ecx": 935, "imul edi edx": 936, "imul ecx": 937, "cmovg <STR> ebx": 938, "cmovnz edx <STR>": 939, "and ebp esi": 940, "idiv ebp": 941, "imul esi": 942, "cmovs esi eax": 943, "or edx ebx": 944, "imul ecx edx": 945, "cmovl ebx eax": 946, "cmovz <STR> ebp": 947, "sbb edi ebx": 948, "cmova <STR> ebp": 949, "xor <MEM> ebx": 950, "adc ebp eax": 951, "dec edi": 952, "imul <STR> <NUM>": 953, "add esi esi": 954, "cmovns ebp <STR>": 955, "cmovbe ecx eax": 956, "cmovnz esi eax": 957, "cmovns edi <STR>": 958, "cmovle edx <MEM>": 959, "cmovns ebx edx": 960, "cmovle <STR> edx": 961, "cmovg <STR> <STR>": 962, "test ecx <STR>": 963, "adc ebx <STR>": 964, "and eax esi": 965, "cmovbe ecx ebp": 966, "add edi ecx": 967, "rol <MEM> <STR>": 968, "bt eax <STR>": 969, "cmovz ebp edx": 970, "cmovg edi <MEM>": 971, "cmovg ebx eax": 972, "cmovns ebx <STR>": 973, "xor ebx eax": 974, "bt ebp edx": 975, "xor ebx ecx": 976, "cmovnz edi <MEM>": 977, "cmovle eax ebx": 978, "or edi <MEM>": 979, "and esi <MEM>": 980, "inc ebx": 981, "cmovg ecx ebp": 982, "cmovnz edi ecx": 983, "cmovbe <STR> <MEM>": 984, "sbb esi edx": 985, "cmovbe eax <STR>": 986, "cmovs eax ecx": 987, "cmovnz ecx esi": 988, "cmovb <STR> edx": 989, "sar ebp <STR>": 990, "and ebp ecx": 991, "cmova edx ecx": 992, "and ebp eax": 993, "and esi ebp": 994, "test ebx <NUM>": 995, "inc ecx": 996, "cmovg eax <STR>": 997, "sbb edx esi": 998, "or ebp edx": 999, "imul edi esi": 1000, "cmovg ebx ebp": 1001, "cmovnz ecx edi": 1002, "cmovle <STR> edi": 1003, "cmovns esi edx": 1004, "add ebp esi": 1005, "imul ebp": 1006, "imul ebp <NUM>": 1007, "cmovs ebp eax": 1008, "imul edi": 1009, "or esi <MEM>": 1010, "cmovg esi eax": 1011, "not ebp": 1012, "xor ebx <MEM>": 1013, "xor ebp ecx": 1014, "xor <STR> ebp": 1015, "xor <STR> ebx": 1016, "xor edi edx": 1017, "cmovz edx esi": 1018, "cmovns edx <STR>": 1019, "cmovns esi ebx": 1020, "adc edx <STR>": 1021, "cmovns esi ecx": 1022, "adc esi <MEM>": 1023, "add esi ebp": 1024, "rol edx <STR>": 1025, "and <MEM> edx": 1026, "bt ecx <STR>": 1027, "add ebp edi": 1028, "cmovns ebp eax": 1029, "xor <MEM> esi": 1030, "and esi edx": 1031, "cmovnz ecx <MEM>": 1032, "and edi eax": 1033, "or ebp edi": 1034, "cmovg ecx esi": 1035, "cmovz ebx <STR>": 1036, "cmovz edx edi": 1037, "cmovns eax edi": 1038, "adc <MEM> edi": 1039, "xor esi edi": 1040, "xor esi edx": 1041, "xor esi ebx": 1042, "cmovs ebx eax": 1043, "and edi edx": 1044, "xor edi eax": 1045, "test <STR> ecx": 1046, "cmovbe <STR> ebx": 1047, "cmovz esi <STR>": 1048, "cmovbe edi <STR>": 1049, "and esi <STR>": 1050, "cmovz ebp edi": 1051, "cmovg edi ebp": 1052, "cmovbe ebx eax": 1053, "sbb <STR> <STR>": 1054}